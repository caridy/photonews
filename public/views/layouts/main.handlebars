<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />

    <title>PhotoNews web app showcasing "modown" libraries</title>
    <meta name="description" content="modown mojito" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="apple-mobile-web-app-capable" content="yes" />


    <link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.3.0/pure-min.css">
    <link rel="stylesheet" href="http://purecss.io/combo/1.6.3?/css/layouts/gallery.css">
    <!-- TODO selectively include css assets based on route -->
    <!-- <link rel="stylesheet" href="http://purecss.io/combo/1.6.3?/css/layouts/blog.css"> -->

</head>
<body>

    <div id="pn-container">

        <div class="header">
            <div class="pure-menu pure-menu-open pure-menu-horizontal">
                <a class="pure-menu-heading" href="/">PhotoNews</a>
                <ul>
                    <li class="pure-menu-selected"><a href="/news">News</a></li>
                    <li><a href="/photos">Photos</a></li>
                    <li><a href="/about">About</a></li>
                    <!--
                    <li><a href="/photos">Photos</a></li>
                    <li><a href="/about">About</a></li>
                    -->
                </ul>
            </div>
        </div>

        <div id="pn-view-container">
            {{{outlet}}}
        </div>
    
    </div>


    <script>{{{state}}}</script>

    <script>
    // TODO include the modules using template
    app.yui.use(
    'util',
    'router-middleware', // installed the render and router on `app`
    'default-model', 'default-controller',
    'news-controller', 'photos-controller',
    'news-model', 'photos-model',
    'post-model', 'photo-model',
    'news-handler',
    'pn-app',
    'home-view', 'news-view', 'photos-view', 'about-view', function (Y) {

        var routes = PN.ROUTES.routes,
            views = PN.VIEWS.views,
            i,
            YApp;

        YApp = new Y.PN.App({
            container: '#pn-container',
            viewContainer: '#pn-view-container',

            transitions: true,
            serverRouting: true,

            views: views
        });

        window.YApp = YApp;

        /*
        YApp.marker= function (req, res, next) {
            console.log('----------------------------------------------');
            console.log('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
            console.log('----------------------------------------------');
            next();
        };
        // TODO find a more appropriate way to attach the renderer here
        YApp.renderer = app.renderer;
        */

        i = 0;
        Object.keys(routes).forEach(function (name) {
            /*
            var routeConfig = routes[name],
                classify = Y.PN.util.classify,
                handlers = [];

            // TODO instead of deriving the name here, add it to the routeConfig
            //      annotations
            handlers.push('marker');
            handlers.push('renderer');
            handlers.push(Y.Handlers[classify(name + '-handler')]);
            YApp.route(routeConfig.path, handlers);
            */

            // app.page() will do the following:
            // - insalled the 'marker' and 'renderer' middleware
            // - lookup the handler by 'name' and look up the handler function
            //   in Y.Handlers
            //
            // app.page(routeConfig.path, 'name');
            // app.page(routeConfig.path, Y.Handlers[classify(name + '-handler')]);

            var routeConfig = routes[name];
            app.page(name, routeConfig.path);
        });

        // i = 0;
        // Object.keys(routes).forEach(function (name) {
        //     var routeConfig = routes[name],
        //         util = Y.PN.util,
        //         dispatch,
        //         handlers = [];

        //     if (routeConfig.annotations && routeConfig.annotations.dispatch) {
        //         dispatch = routeConfig.annotations.dispatch;

        //         dispatch.handlerNames.forEach(function (handlerName) {
        //             handlers.push(Y.Handlers[util.classify(handlerName)]);
        //         });
        //         YApp.route(routeConfig.path, handlers);
        //         // YApp.get('routes')[i] = {
        //         //     name: name,
        //         //     dispatch: dispatch // save it for later if necessary
        //         // };
        //         i = i + 1;
        //     }
        // });


        if (Y.config.win.navigator.standalone) {
          // TODO
          console.log('standalone mode');
        }

        YApp.render({rendered: true}).dispatch();
    });
    </script>
</body>
</html>
